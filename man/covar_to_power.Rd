% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/covar_to_power.R
\name{covar_to_power}
\alias{covar_to_power}
\title{Calculate the real valued power of the variance-covariance matrix}
\usage{
covar_to_power(covar_mat, pow = 1L, verbose = FALSE)
}
\arguments{
\item{covar_mat}{a positive-definite, square (n by n) matrix}

\item{pow}{the power to calculate}

\item{verbose}{provide working (FALSE, default)}
}
\value{
Note this is not working yet because eigen() can't guarentee the correct 
signs to recover the original matrix for non-even powers
best to use the expm::power() or Matrix::chol() function

Used the eigen decomposition that

\code{covar_mat} \eqn{= U \Lambda U^T}{= U \Lambda U^T}

when 

\code{covar_mat} a positive-definite, square (n by n) matrix.

Therefore

\code{covar_mat ** pow} \eqn{= U \Lambda^{pow} U^T}{= U \Lambda^{pow} U^T}
}
\description{
Calculate the real valued power of the variance-covariance matrix
}
\examples{
A <- diag(2)
covar_to_power(A, pow = 2, verbose = TRUE)
covar_to_power(A, pow = -1/2, verbose = TRUE)

B <- diag(c(1, 4))
covar_to_power(B, pow = 2, verbose = TRUE)
covar_to_power(B, pow = 1/2, verbose = TRUE)
covar_to_power(B, pow = -1/2, verbose = TRUE)

C <- matrix(c(4, -2, -2, 4), nrow = 2)
covar_to_power(C, pow = 2, verbose = TRUE)
covar_to_power(C, pow = 1/2, verbose = TRUE)
covar_to_power(C, pow = -1/2, verbose = TRUE)
covar_to_power(C, pow = 2) * covar_to_power(C, pow = -1)
covar_to_power(C, pow = 1/2) * covar_to_power(C, pow = 1 / 2)
covar_to_power(C, pow = -1/2) * covar_to_power(C, pow = 3 / 2)

}
