// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// enumerate_simplex_cpp
IntegerMatrix enumerate_simplex_cpp(int p, int n, int count);
RcppExport SEXP _simplexity_enumerate_simplex_cpp(SEXP pSEXP, SEXP nSEXP, SEXP countSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type count(countSEXP);
    rcpp_result_gen = Rcpp::wrap(enumerate_simplex_cpp(p, n, count));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_simplexity_enumerate_simplex_cpp", (DL_FUNC) &_simplexity_enumerate_simplex_cpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_simplexity(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
